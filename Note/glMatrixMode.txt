	我们在学习OpenGL时，对矩阵的操作是核心，在OpenGL中很多函数的解释都会说对当前
矩阵怎么怎么操作.
	例如：
		void glTranslatef（），将当前矩阵与glTanslatef（）指定的函数相乘，以平移物体.
		void glFrustum()，将当前矩阵与glFrustum()指定的矩阵相乘以实现正视投影变换等等，
那这里的当前矩阵到底是个什么矩阵呢，很多同学初学时会产生困惑。

	void glMatrixMode（GLenum mode）
	mode 告诉计算机哪一个矩阵堆栈将是下面矩阵操作的目标,即将什么矩阵设置为当前矩阵，
他的可选值有： GL_MODELVIEW、GL_PROJECTION、GL_TEXTURE.

	GL_MODELVIEW: 应用这个参数后，表示接下来的矩阵操作都是针对模型视景矩阵堆栈,
				  直到下一次调用这个函数并更改参数为止。
	GL_PROJECTION: 应用这个参数后，表示接下来的矩阵操作都是针对投影矩阵堆栈, 
				  直到下一次调用这个函数并更改参数为止。
	GL_TEXTURE:	应用这个参数后，表示接下来的矩阵操作都是针对纹理矩阵堆栈 ，
				  直到下一次调用这个函数并更改参数为止。
	
	当我们设置了当前的矩阵后，我们接下来所调用的所有openGL库函数的功能必须确定是
针对我们设定的这个当前矩阵的，不能张冠李戴。例如：
	glMatrixMode（GL_MODELVIEW ）；//设置当前矩阵为模型视景矩阵
	gluPerspective(45.0f,(GLfloat)cx/(GLfloat)cy,0.1f,100.0f)；
	//对图像进行透视投影，以将三维物体显示在二维平面上
	
	这样调用是错误的,结果将没有图像显示,这是因为,我们设置了当前矩阵为模型视景矩阵，
而gluPerspective()是要对投影矩阵进行操作，那么计算机就会把模型矩阵当做投影矩阵，
来与gluPerspective()指定的矩阵进行乘法运算，最终就会导致错误。
